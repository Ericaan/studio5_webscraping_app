# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'project_ui.ui'
#
# Created by: PyQt5 UI code generator 5.15.7
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5 import QtWebEngineWidgets
import all_projects_ui
import crud
<<<<<<< Updated upstream
import pandas as pd
=======
import web_scraper
>>>>>>> Stashed changes

temp_dict = {}


class Ui_MainWindow(object):
    #method to go to back to projects
    def openAllProjectWindow(self):
        self.window = QtWidgets.QMainWindow()
        self.ui = all_projects_ui.Ui_Project_Main()
        self.ui.setupUi(self.window)
        self.window.show()
        self.ui.stackedWidget.setCurrentIndex(1)
        uid = crud.return_userid_by_pname(self.lbl_pname.text())
        self.ui.userId_label.setText(uid)
        crud.read_specific_fields(uid)

        # read csv file
        read_csv = pd.read_csv('project_details.csv')
        rows = len(read_csv)
        columns = len(read_csv.columns)
        header_labels = read_csv.columns

        # set the table widget
        self.ui.projects_table.setRowCount(rows)
        self.ui.projects_table.setColumnCount(columns)
        self.ui.projects_table.setHorizontalHeaderLabels(header_labels)

        # put the data in table widget item
        for i in range(rows):
            for j in range(columns):
                self.ui.projects_table.setItem(i, j, QtWidgets.QTableWidgetItem(str(read_csv.iat[i, j])))

        # resize the contents of the table
        self.ui.projects_table.resizeColumnsToContents()
        self.ui.projects_table.resizeRowsToContents()

        # for now -- user cannot edit the table
        self.ui.projects_table.setEditTriggers(QtWidgets.QAbstractItemView.NoEditTriggers)

    def setupUi(self, Project_UI):
        Project_UI.setObjectName("Project_UI")
        Project_UI.resize(1106, 839)
        self.centralwidget = QtWidgets.QWidget(Project_UI)
        self.centralwidget.setObjectName("centralwidget")
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout(self.centralwidget)
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.groupBox_2 = QtWidgets.QGroupBox(self.centralwidget)
        self.groupBox_2.setMaximumSize(QtCore.QSize(300, 16777215))
        self.groupBox_2.setTitle("")
        self.groupBox_2.setObjectName("groupBox_2")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.groupBox_2)
        self.verticalLayout_2.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_2.setSpacing(7)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.groupBox_4 = QtWidgets.QGroupBox(self.groupBox_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.groupBox_4.sizePolicy().hasHeightForWidth())
        self.groupBox_4.setSizePolicy(sizePolicy)
        self.groupBox_4.setMinimumSize(QtCore.QSize(0, 100))
        self.groupBox_4.setTitle("")
        self.groupBox_4.setObjectName("groupBox_4")
        self.horizontalLayout_4 = QtWidgets.QHBoxLayout(self.groupBox_4)
        self.horizontalLayout_4.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_4.setSpacing(7)
        self.horizontalLayout_4.setObjectName("horizontalLayout_4")
        self.tb_home = QtWidgets.QToolButton(self.groupBox_4)
        self.tb_home.setMinimumSize(QtCore.QSize(50, 50))
        self.tb_home.setObjectName("tb_home")
        self.horizontalLayout_4.addWidget(self.tb_home)

        self.lbl_pname = QtWidgets.QLabel(self.groupBox_4)
        font = QtGui.QFont()
        font.setPointSize(20)
        self.lbl_pname.setFont(font)
        self.lbl_pname.setObjectName("lbl_pname")
        self.horizontalLayout_4.addWidget(self.lbl_pname)
        self.verticalLayout_2.addWidget(self.groupBox_4)

        self.lbl_input1 = QtWidgets.QLabel(self.groupBox_2)
        self.lbl_input1.setObjectName("lbl_input1")
        self.verticalLayout_2.addWidget(self.lbl_input1)
        self.txt_input1 = QtWidgets.QTextEdit(self.groupBox_2)
        self.txt_input1.setMaximumSize(QtCore.QSize(16777215, 50))
        self.txt_input1.setObjectName("txt_input1")

        self.verticalLayout_2.addWidget(self.txt_input1)
        self.lbl_input2 = QtWidgets.QLabel(self.groupBox_2)
        self.lbl_input2.setObjectName("lbl_input2")
        self.verticalLayout_2.addWidget(self.lbl_input2)
        self.txt_input2 = QtWidgets.QTextEdit(self.groupBox_2)
        self.txt_input2.setMaximumSize(QtCore.QSize(16777215, 50))
        self.txt_input2.setObjectName("txt_input2")

        self.verticalLayout_2.addWidget(self.txt_input2)
        self.btn_add2template = QtWidgets.QPushButton(self.groupBox_2)
        self.btn_add2template.setObjectName("btn_add2template")
        self.verticalLayout_2.addWidget(self.btn_add2template)
        self.tree_template = QtWidgets.QTreeWidget(self.groupBox_2)
        self.tree_template.setMinimumSize(QtCore.QSize(0, 0))
        self.tree_template.setObjectName("tree_template")
        self.tree_template.headerItem().setText(0, "Template")
        self.tree_template.headerItem().setText(1, "input1")
        self.tree_template.headerItem().setText(2, "input2")

        # item_0 = QtWidgets.QTreeWidgetItem(self.tree_template)
        # item_1 = QtWidgets.QTreeWidgetItem(item_0)
        # item_1 = QtWidgets.QTreeWidgetItem(item_0)
        # item_1 = QtWidgets.QTreeWidgetItem(item_0)
        # item_0 = QtWidgets.QTreeWidgetItem(self.tree_template)
        # item_0 = QtWidgets.QTreeWidgetItem(self.tree_template)

        self.verticalLayout_2.addWidget(self.tree_template)
        self.groupBox_6 = QtWidgets.QGroupBox(self.groupBox_2)
        self.groupBox_6.setObjectName("groupBox_6")
        self.gridLayout = QtWidgets.QGridLayout(self.groupBox_6)
        self.gridLayout.setObjectName("gridLayout")
        self.rb_delete = QtWidgets.QRadioButton(self.groupBox_6)
        self.rb_delete.setChecked(False)
        self.rb_delete.setObjectName("rb_delete")
        self.buttonGroup = QtWidgets.QButtonGroup(Project_UI)
        self.buttonGroup.setObjectName("buttonGroup")
        self.buttonGroup.addButton(self.rb_delete)
        self.gridLayout.addWidget(self.rb_delete, 3, 0, 1, 1)
        self.rb_select = QtWidgets.QRadioButton(self.groupBox_6)
        self.rb_select.setChecked(True)
        self.rb_select.setObjectName("rb_select")
        self.buttonGroup.addButton(self.rb_select)
        self.gridLayout.addWidget(self.rb_select, 0, 0, 1, 1)
        self.rb_rel_select = QtWidgets.QRadioButton(self.groupBox_6)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.rb_rel_select.sizePolicy().hasHeightForWidth())
        self.rb_rel_select.setSizePolicy(sizePolicy)
        self.rb_rel_select.setChecked(False)
        self.rb_rel_select.setObjectName("rb_rel_select")
        self.buttonGroup.addButton(self.rb_rel_select)
        self.gridLayout.addWidget(self.rb_rel_select, 2, 0, 1, 1)
        self.verticalLayout_2.addWidget(self.groupBox_6)
        self.horizontalLayout_2.addWidget(self.groupBox_2)
        self.groupBox = QtWidgets.QGroupBox(self.centralwidget)
        self.groupBox.setTitle("")
        self.groupBox.setObjectName("groupBox")
        self.verticalLayout_3 = QtWidgets.QVBoxLayout(self.groupBox)
        self.verticalLayout_3.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_3.setSpacing(7)
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.groupBox_3 = QtWidgets.QGroupBox(self.groupBox)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.groupBox_3.sizePolicy().hasHeightForWidth())
        self.groupBox_3.setSizePolicy(sizePolicy)
        self.groupBox_3.setMinimumSize(QtCore.QSize(0, 100))
        self.groupBox_3.setMaximumSize(QtCore.QSize(16777215, 100))
        self.groupBox_3.setTitle("")
        self.groupBox_3.setObjectName("groupBox_3")
        self.horizontalLayout_5 = QtWidgets.QHBoxLayout(self.groupBox_3)
        self.horizontalLayout_5.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_5.setSpacing(7)
        self.horizontalLayout_5.setObjectName("horizontalLayout_5")
        self.btn_psave = QtWidgets.QPushButton(self.groupBox_3)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.btn_psave.setFont(font)
        self.btn_psave.setObjectName("btn_psave")
        self.horizontalLayout_5.addWidget(self.btn_psave)
        self.btn_get_data = QtWidgets.QPushButton(self.groupBox_3)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.btn_get_data.setFont(font)
        self.btn_get_data.setObjectName("btn_get_data")
        self.horizontalLayout_5.addWidget(self.btn_get_data)
        self.btn_pdel = QtWidgets.QPushButton(self.groupBox_3)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.btn_pdel.setFont(font)
        self.btn_pdel.setObjectName("btn_pdel")
        self.horizontalLayout_5.addWidget(self.btn_pdel)
        self.verticalLayout_3.addWidget(self.groupBox_3)
        self.tabWidget = QtWidgets.QTabWidget(self.groupBox)
        self.tabWidget.setObjectName("tabWidget")
        self.tab = QtWidgets.QWidget()
        self.tab.setObjectName("tab")
        self.verticalLayout_4 = QtWidgets.QVBoxLayout(self.tab)
        self.verticalLayout_4.setObjectName("verticalLayout_4")
        self.groupBox_5 = QtWidgets.QGroupBox(self.tab)
        self.groupBox_5.setMaximumSize(QtCore.QSize(16777215, 50))
        self.groupBox_5.setTitle("")
        self.groupBox_5.setObjectName("groupBox_5")
        self.horizontalLayout_6 = QtWidgets.QHBoxLayout(self.groupBox_5)
        self.horizontalLayout_6.setContentsMargins(0, 10, 0, 10)
        self.horizontalLayout_6.setObjectName("horizontalLayout_6")
        self.url_bar = QtWidgets.QTextEdit(self.groupBox_5)
        self.url_bar.setObjectName("url_bar")
        self.horizontalLayout_6.addWidget(self.url_bar)
        self.go_btn = QtWidgets.QPushButton(self.groupBox_5)
        self.go_btn.setObjectName("go_btn")
        self.horizontalLayout_6.addWidget(self.go_btn)
        self.back_btn = QtWidgets.QPushButton(self.groupBox_5)
        self.back_btn.setObjectName("back_btn")
        self.horizontalLayout_6.addWidget(self.back_btn)
        self.for_btn = QtWidgets.QPushButton(self.groupBox_5)
        self.for_btn.setObjectName("for_btn")
        self.horizontalLayout_6.addWidget(self.for_btn)
        self.verticalLayout_4.addWidget(self.groupBox_5)
        self.browser = QtWebEngineWidgets.QWebEngineView(self.tab)
        self.browser.setMinimumSize(QtCore.QSize(0, 0))
        self.browser.setObjectName("browser")
        self.verticalLayout_4.addWidget(self.browser)
        self.tabWidget.addTab(self.tab, "")
        self.tab_2 = QtWidgets.QWidget()
        self.tab_2.setObjectName("tab_2")
        self.tabWidget.addTab(self.tab_2, "")
        self.verticalLayout_3.addWidget(self.tabWidget)
        self.tableWidget = QtWidgets.QTableWidget(self.groupBox)
        self.tableWidget.setMaximumSize(QtCore.QSize(16777215, 150))
        self.tableWidget.setObjectName("tableWidget")
        self.tableWidget.setColumnCount(0)
        self.tableWidget.setRowCount(2)
        self.tableWidget.verticalHeader().setStretchLastSection(True)
        self.tableWidget.verticalHeader().setSectionResizeMode(QtWidgets.QHeaderView.Stretch)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setVerticalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setVerticalHeaderItem(1, item)

        self.verticalLayout_3.addWidget(self.tableWidget)
        self.horizontalLayout_2.addWidget(self.groupBox)
        Project_UI.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(Project_UI)
        self.statusbar.setObjectName("statusbar")
        Project_UI.setStatusBar(self.statusbar)

        #non autogenerated code
        #cleanup extra lines
        self.groupBox_2.setFlat(True)
        self.groupBox_2.setStyleSheet("QGroupBox#groupBox_2 {border:0;}")
        self.groupBox_4.setFlat(True)
        self.groupBox_4.setStyleSheet("QGroupBox#groupBox_4 {border:0;}")
        self.groupBox_5.setFlat(True)
        self.groupBox_5.setStyleSheet("QGroupBox#groupBox_5 {border:0;}")
        self.groupBox_3.setFlat(True)
        self.groupBox_3.setStyleSheet("QGroupBox#groupBox_3 {border:0;}")
        self.groupBox.setFlat(True)
        self.groupBox.setStyleSheet("QGroupBox#groupBox {border:0;}")
        self.groupBox_6.setFlat(True)
        self.groupBox_6.setStyleSheet("QGroupBox#groupBox_3 {border:0;}")

        # make browser buttons work
        self.go_btn.clicked.connect(lambda: self.navigate(self.url_bar.toPlainText()))
        self.back_btn.clicked.connect(lambda: self.browser.back)
        self.for_btn.clicked.connect(lambda: self.browser.forward)
        # template handling
        self.tree_template.setColumnCount(1)
        self.tree_template.itemClicked.connect(self.temp_clicked)
        self.btn_add2template.clicked.connect(self.new_branch)
        # preview table handling
        self.tableWidget.clicked.connect(self.table_refresh)
        # back button functionality
        self.tb_home.clicked.connect(lambda: self.openAllProjectWindow())
        self.tb_home.clicked.connect(lambda: Project_UI.close())
        # save button functionality
        self.btn_psave.clicked.connect(lambda: self.make_dict())
        self.btn_psave.clicked.connect(lambda: self.save_click())
        # get data button functionality
        self.btn_get_data.clicked.connect(lambda: self.make_dict())
        self.btn_get_data.clicked.connect(lambda: self.web_scrape)
        # delete button
        self.btn_pdel.clicked.connect(lambda: self.del_project())
        self.btn_pdel.clicked.connect(lambda: self.openAllProjectWindow())
        self.btn_pdel.clicked.connect(lambda: Project_UI.close())

        self.retranslateUi(Project_UI)
        self.tabWidget.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(Project_UI)

    # buttons and other interaction methods
    def web_scrape(self):
        iterator = QtWidgets.QTreeWidgetItemIterator(self.tree_template)
        my_url = self.url_bar.toPlainText()
        while iterator.value():
            item = iterator.value()
            web_scraper.scrape(my_url, item.text(1), item.text(2), 1, False)
            iterator += 1

    def table_refresh(self):
        iterator = QtWidgets.QTreeWidgetItemIterator(self.tree_template)
        current_col = 0
        while iterator.value():
            item = iterator.value()
            if item.parent() is None:
                self.tableWidget.horizontalHeaderItem(current_col).setText(item.text(0))
            else:
                self.tableWidget.horizontalHeaderItem(current_col).setText(item.parent().text(0)+"_"+item.text(0))
            iterator += 1
            current_col += 1

    def save_click(self):
        pid = crud.read_project(self.lbl_pname.text())
        pname = self.lbl_pname.text()
        purl = self.url_bar.toPlainText()
        pinput = temp_dict
        crud.update_project(pid, pname, purl, pinput)
        temp_dict.clear()

    def make_dict(self):
        print("iterate")
        iterator = QtWidgets.QTreeWidgetItemIterator(self.tree_template)
        while iterator.value():
            item = iterator.value()
            if item.parent() is None:
                key = item.text(0)
                values = [item.text(1), item.text(2)]
                temp_dict[key] = values
            else:
                key = item.parent().text(0)
                values = {item.text(0): [item.text(1), item.text(2)]}
                temp_dict[key].append(values)
            iterator += 1
        print(str(temp_dict))

    #navigate method for go button
    def navigate(self, url):
        # in case it doesnt have http
        if not url.startswith("http"):
            url = "http://" + url
            self.url_bar.setText(url)
        self.browser.setUrl(QtCore.QUrl(url))

    #method for template item handling
    def temp_clicked(self):
        item = self.tree_template.currentItem()
        root = self.tree_template.invisibleRootItem()
        if self.rb_delete.isChecked():
            print("deleted "+item.text(0))
            # delete from preview
            for x in range(self.tableWidget.columnCount()):
                if self.tableWidget.horizontalHeaderItem(x).text() == item.text(0):
                    self.tableWidget.removeColumn(x)
            (item.parent() or root).removeChild(item)
        else:
            print(item.text(0))

    #adding a new item to the template
    def new_branch(self):
        _translate = QtCore.QCoreApplication.translate
        if self.rb_select.isChecked():
            print("Select")
            # declare a new tree widget item
            item_0 = QtWidgets.QTreeWidgetItem(self.tree_template)
            count = self.tree_template.topLevelItemCount()
            # set new tree widget item
            self.tree_template.topLevelItem(count-1).setText(0, _translate("Project_UI", "newItem"))
            self.tree_template.topLevelItem(count-1).setText(1, _translate("Project_UI", self.txt_input1.toPlainText()))
            self.tree_template.topLevelItem(count-1).setText(2, _translate("Project_UI", self.txt_input2.toPlainText()))
            self.tree_template.topLevelItem(count-1).setFlags(self.tree_template.topLevelItem(count-1).flags() | QtCore.Qt.ItemIsEditable)
            # table update
            # column
            item_1 = QtWidgets.QTableWidgetItem()
            cols = self.tableWidget.columnCount()
            self.tableWidget.setColumnCount(cols+1)
            self.tableWidget.setHorizontalHeaderItem(cols, item_1)
            self.tableWidget.horizontalHeaderItem(cols).setText(_translate("MainWindow", "newItem"))
            # row 1 item
            item_2 = QtWidgets.QTableWidgetItem()
            self.tableWidget.setItem(0, cols, item_2)
            self.tableWidget.item(0, cols).setText(_translate("MainWindow", self.txt_input1.toPlainText()))
            # row 2 item
            item_3 = QtWidgets.QTableWidgetItem()
            self.tableWidget.setItem(1, cols, item_3)
            self.tableWidget.item(1, cols).setText(_translate("MainWindow", self.txt_input2.toPlainText()))

        elif self.rb_rel_select.isChecked():
            print("relative select")
            # find the item its relatively selected to
            item = self.tree_template.selectedItems()
            # set the new tree widget item
            the_child = QtWidgets.QTreeWidgetItem()
            the_child.setText(0, _translate("Project_UI", "newSubItem"))
            the_child.setText(1, _translate("Project_UI", self.txt_input1.toPlainText()))
            the_child.setText(2, _translate("Project_UI", self.txt_input2.toPlainText()))
            the_child.setFlags(the_child.flags() | QtCore.Qt.ItemIsEditable)
            item[0].addChild(the_child)
            # table update
            # column
            item_1 = QtWidgets.QTableWidgetItem()
            cols = self.tableWidget.columnCount()
            self.tableWidget.setColumnCount(cols + 1)
            self.tableWidget.setHorizontalHeaderItem(cols, item_1)
            self.tableWidget.horizontalHeaderItem(cols).setText(_translate("MainWindow", item[0].text(0)+"newSubItem"))
            # row 1 item
            item_2 = QtWidgets.QTableWidgetItem()
            self.tableWidget.setItem(0, cols, item_2)
            self.tableWidget.item(0, cols).setText(_translate("MainWindow", self.txt_input1.toPlainText()))
            # row 2 item
            item_3 = QtWidgets.QTableWidgetItem()
            self.tableWidget.setItem(1, cols, item_3)
            self.tableWidget.item(1, cols).setText(_translate("MainWindow", self.txt_input2.toPlainText()))

    #delete the project from the database
    def del_project(self):
        pid = crud.read_project(self.lbl_pname.text())
        crud.delete_project(pid)

    def retranslateUi(self, Project_UI):
        _translate = QtCore.QCoreApplication.translate
        Project_UI.setWindowTitle(_translate("Project_UI", "YouScrape"))
        self.tb_home.setText(_translate("Project_UI", "..."))
        self.lbl_pname.setText(_translate("Project_UI", "Trademe-cars"))
        self.lbl_input1.setText(_translate("Project_UI", "Input 1"))
        self.lbl_input2.setText(_translate("Project_UI", "Input 2"))
        self.btn_add2template.setText(_translate("Project_UI", "Add to Template"))
        __sortingEnabled = self.tree_template.isSortingEnabled()
        self.tree_template.setSortingEnabled(False)

        # self.tree_template.topLevelItem(0).setText(0, _translate("Project_UI", "title"))
        # self.tree_template.topLevelItem(0).child(0).setText(0, _translate("Project_UI", "text"))
        # self.tree_template.topLevelItem(0).child(1).setText(0, _translate("Project_UI", "price"))
        # self.tree_template.topLevelItem(0).child(2).setText(0, _translate("Project_UI", "url"))
        # self.tree_template.topLevelItem(1).setText(0, _translate("Project_UI", "Company"))
        # self.tree_template.topLevelItem(2).setText(0, _translate("Project_UI", "Reviews"))

        self.tree_template.setSortingEnabled(__sortingEnabled)
        # non autogenerated code
        self.tree_template.setDragDropMode(QtWidgets.QAbstractItemView.InternalMove)
        self.tree_template.setDragEnabled(True)
        self.tree_template.setAcceptDrops(True)

        # self.tree_template.topLevelItem(0).setFlags(self.tree_template.topLevelItem(0).flags() | QtCore.Qt.ItemIsEditable)
        # self.tree_template.topLevelItem(1).setFlags(self.tree_template.topLevelItem(1).flags() | QtCore.Qt.ItemIsEditable)
        # self.tree_template.topLevelItem(2).setFlags(self.tree_template.topLevelItem(2).flags() | QtCore.Qt.ItemIsEditable)
        # self.tree_template.topLevelItem(0).child(0).setFlags(self.tree_template.topLevelItem(0).child(0).flags() | QtCore.Qt.ItemIsEditable)
        # self.tree_template.topLevelItem(0).child(1).setFlags(self.tree_template.topLevelItem(0).child(1).flags() | QtCore.Qt.ItemIsEditable)
        # self.tree_template.topLevelItem(0).child(2).setFlags(self.tree_template.topLevelItem(0).child(2).flags() | QtCore.Qt.ItemIsEditable)

        #
        self.groupBox_6.setTitle(_translate("Project_UI", "Commands"))
        self.rb_delete.setText(_translate("Project_UI", "Delete"))
        self.rb_select.setText(_translate("Project_UI", "Select"))
        self.rb_rel_select.setText(_translate("Project_UI", "Relative Select"))
        self.btn_psave.setText(_translate("Project_UI", "Save"))
        self.btn_get_data.setText(_translate("Project_UI", "Get Data"))
        self.btn_pdel.setText(_translate("Project_UI", "Delete"))
        self.go_btn.setText(_translate("Project_UI", "Go"))
        self.back_btn.setText(_translate("Project_UI", "<"))
        self.for_btn.setText(_translate("Project_UI", ">"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab), _translate("Project_UI", "Tab 1"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_2), _translate("Project_UI", "Tab 2"))

        __sortingEnabled = self.tableWidget.isSortingEnabled()
        self.tableWidget.setSortingEnabled(False)
        item = self.tableWidget.verticalHeaderItem(0)
        item.setText(_translate("MainWindow", "1"))
        item = self.tableWidget.verticalHeaderItem(1)
        item.setText(_translate("MainWindow", "2"))
        self.tableWidget.setSortingEnabled(__sortingEnabled)
        self.tableWidget.setEditTriggers(QtWidgets.QTableWidget.NoEditTriggers)


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
